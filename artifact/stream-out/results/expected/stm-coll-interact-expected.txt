<StreamCollInteract: void list2Stm2list()>/r17 -> (2)objs: NewObj{<StreamCollInteract: void list2Stm2list()>[0@L49] new A}
<StreamCollInteract: void list2Stm2list()>/r19 -> (2)objs: NewObj{<StreamCollInteract: void list2Stm2list()>[4@L51] new A}
<StreamCollInteract: void streamItr()>/r7 -> (1)objs: NewObj{<StreamCollInteract: void streamItr()>[0@L74] new A}
<StreamCollInteract: void streamItr()>/r9 -> (1)objs: NewObj{<StreamCollInteract: void streamItr()>[2@L75] new A}
<StreamCollInteract: void streamSpliterator()>/[Lambda-Mock-Arg-0]-{<StreamCollInteract: void streamSpliterator()>[23@L101] $r11 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer (java.util.Set)>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <StreamCollInteract: void lambda$streamSpliterator$0(java.util.Set,A)>,MethodType: void (A)]($r9)} -> (2)objs: NewObj{<StreamCollInteract: void streamSpliterator()>[0@L89] new A} |,| NewObj{<StreamCollInteract: void streamSpliterator()>[2@L90] new A}
<StreamCollInteract: void streamSpliterator()>/[Lambda-Mock-Arg-0]-{<StreamCollInteract: void streamSpliterator()>[34@L107] $r17 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer (java.util.Set)>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeInterface]: <java.util.Set: boolean add(java.lang.Object)>,MethodType: void (A)]($r15)} -> (2)objs: NewObj{<StreamCollInteract: void streamSpliterator()>[4@L91] new A} |,| NewObj{<StreamCollInteract: void streamSpliterator()>[6@L92] new A}
<StreamCollInteract: void streamSpliterator()>/[Lambda-Mock-Arg-0]-{<StreamCollInteract: void streamSpliterator()>[45@L113] $r23 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer (java.util.List)>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeInterface]: <java.util.List: boolean add(java.lang.Object)>,MethodType: void (A)]($r21)} -> (2)objs: NewObj{<StreamCollInteract: void streamSpliterator()>[8@L93] new A} |,| NewObj{<StreamCollInteract: void streamSpliterator()>[10@L94] new A}